Node js
graph QL
prisma ORM
postgre SQL--as our database
supabase for hosting and managing cloud postgresql database
tailwind and shadcn
typescript
AWS--for hosting


nextjs-for frontend

project folder directory
-->npm install --global yarn
-->Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass(for temporarily allowing powershell to run these scripts)
then cd to twitter-client
1.Twitter-Client
-->yarn create next-app .
-->yarn dev(to start)
-->yarn add react icons



Twitter server
yarn init
npm install -g typescript
tsc --init
inside the tsconfig.js  change
"rootDir": "./src",
"outDir": "./build", 
Add the below in the package.json and run yarn dev build folder will be generated
"scripts": {
    "start": "node build/index",--//goes to index file in build folder
    "build": "tsc -p .",
    "dev": "tsc-watch --onSuccess \"npm start\""--//watches our src directory and on succesful compilation start the project again  
  },

  install prisma and create your project in the supabase

  in schema.prisma
  In Prisma, the @ symbol is used to define attributes or decorators that modify the behavior of the fields or models in your schema. These attributes can specify how a field should be treated by the database or Prisma.
Here's what each attribute in your model does:

@id: Marks the field as the primary key of the model. The value of this field must be unique for each record in the table.

@default(cuid()): Specifies that the field should have a default value generated by the cuid() function, which creates a unique identifier.

@unique: Ensures that the value of the field must be unique across all records in the table.

@default(now()): Sets the default value of the field to the current date and time when the record is created.

@updatedAt: Automatically updates the value of this field to the current date and time whenever the record is updated.

These attributes allow you to define the structure and behavior of your database schema directly within your Prisma model.